# name: GitHub Actions Demo
#   on: [pull_request]
#       branches: [develop]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
name: ci/cd
on: 
  pull_request:
    branches: [develop]
  push:
    branches: [develop, test, master]

jobs:
  cicd:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Check out repository code
        uses: actions/checkout@v2

      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      
      - name: Cache npm node_modules
        uses: actions/cache@v1
        with: 
          path: ~/.npm
          key: ${{ runner.os }}-fb-cloud-fn-${{ hashfiles('**/functions/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Run npm ci
        run: |
          cd functions
          npm ci

      - name: Run unit tests
        run: |
          cd functions
          npm test -- --coverage

      - name: Upload code coverage artifact
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: functions/coverage

      # this step is not required as the deploy will also build
      # - name: Build solution
      #   if: github.event_name == 'push'
      #   run: |
      #     cd functions
      #     npm run build
      - name: Display github token
        run:  echo "The github token is ${{ secrets.GITHUB_TOKEN }} - ${{ secrets.GITHUB_TOKEN == null }} "
      - name: Run semantic release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          cd functions
          npx semantic-release
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to DEV firebase   
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy --only functions
        env: 
            FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
            PROJECT_ID: ${{secrets.FIREBASE_DEV_PROJECT_ID}}    

      - name: Deploy to UAT environment
        if: github.event_name == 'push' && github.ref == 'refs/heads/test'
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy --only functions
        env: 
            FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
            PROJECT_ID: ${{secrets.FIREBASE_UAT_PROJECT_ID}}

      - name: Deploy to PROD environment
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy --only functions
        env: 
            FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
            PROJECT_ID: ${{secrets.FIREBASE_PROD_PROJECT_ID}}      

      - name: Upload build folder for Production deployment
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: functions/lib/src

      - run: echo "Job status is ${{ job.status }}."


    
